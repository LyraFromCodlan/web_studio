spring.profiles.default=dev
spring.profiles.active=dev

server.port=6060
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgresPlusDialect
#generate database on start, if doesn't exist
spring.jpa.generate-ddl=true
#allows to keep hibernate session open to fetch data from lazy objects even after the sessions is closed
spring.jpa.open-in-view=false
#logging all sql operations
spring.jpa.hibernate.show-sql=true
#logging all sql operations
spring.jpa.properties.hibernate.format_sql=true
# Fix Postgres JPA Error (Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented). This entry is put just to avoid a warning message in the logs when you start the spring-boot application
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# automatically creates the schema of an embedded DataSource
spring.sql.init.mode=always
#Limits number of the DB's active connection sessions
server.tomcat.max-threads=20

#don't use with scope runtime for jdbc, since it doesn't add driver to classpath on compile time and does so on runtime. Also need to add specified driver in dependencies (not h2)
#spring.datasource.driver-class-name=org.postgresql.Driver

#automatically create the schema (DDL scripts) of your DataSource
spring.datasource.initialize=true
#tunes down if the scripts cause exceptions, the application fails to start
spring.sql.init.continue-on-error=true

#liquibase properties
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

spring.liquibase.enabled=true
spring.liquibase.drop-first=false
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
spring.liquibase.default-schema=public
